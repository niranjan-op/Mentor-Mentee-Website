# Generated by Django 5.1.5 on 2025-04-03 11:47

import core.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CSVInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('csv_content', models.TextField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('associated_users', models.ManyToManyField(blank=True, related_name='source_csv_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CSV Upload',
                'verbose_name_plural': 'CSV Uploads',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('mentor_id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text="Enter your full name in the format 'First Middle Last'", max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mentor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('roll_number', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True, validators=[core.validators.validate_roll_no])),
                ('name', models.CharField(help_text="Enter your full name in the format 'First Middle Last'", max_length=100)),
                ('email_id', models.EmailField(max_length=100, validators=[core.validators.validate_email])),
                ('address', models.TextField(blank=True, help_text='Enter your full address', max_length=500, null=True)),
                ('phone_no_student', models.CharField(blank=True, help_text='Enter your phone number', max_length=12, null=True)),
                ('phone_no_mother', models.CharField(blank=True, help_text="Enter your mother's phone number", max_length=12, null=True)),
                ('phone_no_father', models.CharField(blank=True, help_text="Enter your father's phone number", max_length=12, null=True)),
                ('dob', models.DateField(blank=True, help_text='Enter your date of birth in the format YYYY-MM-DD', null=True, validators=[core.validators.validate_dob])),
                ('marks_10th', models.DecimalField(blank=True, decimal_places=2, help_text='Enter percentage marks (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('marks_12th', models.DecimalField(blank=True, decimal_places=2, help_text='Enter percentage marks (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('jee_score', models.DecimalField(blank=True, decimal_places=2, help_text='Enter percentile (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cet_score', models.DecimalField(blank=True, decimal_places=2, help_text='Enter percentile (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('internship_status', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('APPLIED', 'Applied'), ('SHORTLISTED', 'Shortlisted'), ('ACCEPTED', 'Accepted'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected')], default='NOT_STARTED', max_length=20)),
                ('internship_company', models.CharField(blank=True, max_length=100, null=True)),
                ('internship_role', models.CharField(blank=True, max_length=100, null=True)),
                ('goals', models.TextField(blank=True, help_text="Student's academic and career goals")),
                ('strengths', models.TextField(blank=True, help_text="Student's identified strengths")),
                ('weaknesses', models.TextField(blank=True, help_text='Areas for improvement')),
                ('achievements', models.TextField(blank=True, help_text='Notable achievements during the semester')),
                ('extracurricular', models.TextField(blank=True, help_text='Extracurricular activities and participation')),
                ('suggestions', models.TextField(blank=True, help_text='Mentor suggestions for improvement')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='core.branch')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='core.division')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='core.mentor')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('semester', models.PositiveIntegerField()),
                ('technologies', models.CharField(blank=True, max_length=200)),
                ('repository_link', models.URLField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=2, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveIntegerField()),
                ('is_elective', models.BooleanField(default=False)),
                ('max_marks', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('marks_obtained', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_subjects', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='EndSemesterExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_marks', models.DecimalField(decimal_places=2, default=80.0, max_digits=5)),
                ('marks_obtained', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('student_subject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='end_semester_exam', to='core.studentsubject')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subject_code', models.CharField(max_length=10, unique=True)),
                ('is_elective', models.BooleanField(default=False)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='core.branch')),
            ],
        ),
        migrations.AddField(
            model_name='studentsubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject'),
        ),
        migrations.CreateModel(
            name='ElectiveGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elective_groups', to='core.branch')),
                ('subjects', models.ManyToManyField(related_name='elective_groups', to='core.subject')),
            ],
        ),
        migrations.CreateModel(
            name='SemesterResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveIntegerField()),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, help_text='Semester GPA (0-10 scale)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('average_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Average percentage across all subjects', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semester_results', to='core.student')),
            ],
            options={
                'unique_together': {('student', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='InternalAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_type', models.CharField(choices=[('IA1', 'Internal Assessment 1'), ('IA2', 'Internal Assessment 2')], max_length=20)),
                ('max_marks', models.DecimalField(decimal_places=2, default=20.0, max_digits=5)),
                ('marks_obtained', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('student_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internal_assessments', to='core.studentsubject')),
            ],
            options={
                'unique_together': {('student_subject', 'assessment_type')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='studentsubject',
            unique_together={('student', 'subject', 'semester')},
        ),
    ]
